# EditorConfig helps developers define and
# maintain consistent coding styles between
# different editors and IDEs

# http://EditorConfig.org

# top-most EditorConfig file
root = true

[*]
indent_style = space
indent_size = 4
insert_final_newline = true
charset = utf-8

[*.{proj,csproj,vcxproj,xproj,json,config,nuspec,xml}]
indent_size = 2

[*]
# https://docs.nunit.org/articles/developer-info/Coding-Standards.html#namespace-class-structure-interface-enumeration-and-method-definitions
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

# https://docs.nunit.org/articles/developer-info/Coding-Standards.html#spaces
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = do_not_ignore
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# https://docs.nunit.org/articles/developer-info/Coding-Standards.html#indentation
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = false
csharp_indent_switch_labels = true
csharp_indent_labels = flush_left

# https://docs.nunit.org/articles/developer-info/Coding-Standards.html#file-organization
dotnet_separate_import_directive_groups = false
dotnet_sort_system_directives_first = true
csharp_using_directive_placement = outside_namespace:warning

# https://docs.nunit.org/articles/developer-info/Coding-Standards.html#naming
# Always use "this." and "Me." when applicable; let StyleCop Analyzers provide the warning and fix
dotnet_style_qualification_for_field = true:warning
dotnet_style_qualification_for_property = true:warning
dotnet_style_qualification_for_method = true:warning
dotnet_style_qualification_for_event = true:warning

dotnet_style_predefined_type_for_locals_parameters_members = true:warning
dotnet_style_predefined_type_for_member_access = true:warning
dotnet_style_readonly_field = true:warning

# https://docs.nunit.org/articles/developer-info/Coding-Standards.html#use-of-the-var-keyword
# Unfortunately var_for_built_in_types conflicts with var_when_type_is_apparent. https://github.com/dotnet/roslyn/issues/23714
# Also 'apparent' does not mean the same for everyone.
# Disable diagnostics since no firm policy is in place yet and the messages hide other violations.
csharp_style_var_for_built_in_types = true:none
csharp_style_var_when_type_is_apparent = true:none
csharp_style_var_elsewhere = false:none

# This convention is not mentioned in https://docs.nunit.org/articles/developer-info/Coding-Standards.html
csharp_prefer_braces = when_multiline:warning

# Rules to match the actual code style used
csharp_prefer_simple_default_expression = false:warning
csharp_style_deconstructed_variable_declaration = false:warning
csharp_style_prefer_switch_expression = false:warning
csharp_style_expression_bodied_local_functions = false:warning
csharp_style_pattern_matching_over_as_with_null_check = false:warning

# Suggest more modern language features when available
dotnet_style_object_initializer = true:none
dotnet_style_collection_initializer = true:none
dotnet_style_coalesce_expression = true:warning
dotnet_style_null_propagation = true:warning
dotnet_style_explicit_tuple_names = true:warning
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:warning

# Expression-bodied members
csharp_style_expression_bodied_accessors = when_on_single_line:warning
csharp_style_expression_bodied_constructors = false:none
csharp_style_expression_bodied_indexers = when_on_single_line:warning
csharp_style_expression_bodied_lambdas = when_on_single_line:warning
csharp_style_expression_bodied_local_functions = when_on_single_line:silent
csharp_style_expression_bodied_methods = false:none
csharp_style_expression_bodied_operators = when_on_single_line:warning
csharp_style_expression_bodied_properties = when_on_single_line:warning

# The first matching rule wins, more specific rules at the top

# dotnet_naming_rule.*.symbols does not yet support a comma-separated list https://github.com/dotnet/roslyn/issues/20891
# dotnet_naming_symbols.*.applicable_kinds does not yet support namespace, type_parameter or local https://github.com/dotnet/roslyn/issues/18121

dotnet_naming_style.pascal_case.capitalization = pascal_case
dotnet_naming_style.camel_case.capitalization = camel_case

dotnet_naming_symbols.namespaces_types_and_non_field_members.applicable_kinds = namespace, class, struct, enum, interface, delegate, type_parameter, method, property, event
dotnet_naming_symbols.public_fields.applicable_kinds = field
dotnet_naming_symbols.public_fields.applicable_accessibilities = public
dotnet_naming_symbols.parameters_and_locals.applicable_kinds = parameter, local

dotnet_naming_rule.namespaces_types_and_non_field_members.severity = warning
dotnet_naming_rule.namespaces_types_and_non_field_members.symbols = namespaces_types_and_non_field_members
dotnet_naming_rule.namespaces_types_and_non_field_members.style = pascal_case
dotnet_naming_rule.public_fields.severity = warning
dotnet_naming_rule.public_fields.symbols = public_fields
dotnet_naming_rule.public_fields.style = pascal_case
dotnet_naming_rule.parameters_and_locals.severity = warning
dotnet_naming_rule.parameters_and_locals.symbols = parameters_and_locals
dotnet_naming_rule.parameters_and_locals.style = camel_case

##################################################################################
# IDE Code Style Analyzers

# IDE0041: Use 'is null' check
dotnet_diagnostic.IDE0041.severity = warning

# IDE0046: Convert to conditional expression
# Complex Conditional expressions are not easier to read
dotnet_diagnostic.IDE0046.severity = none

# IDE0057: Use range operator
# Requires runtime support not available on .NET Framework
csharp_style_prefer_range_operator = false

# Rule is buggy, it says suppression can be removed when they cannot.
# IDE0079: Remove unnecessary suppression
dotnet_diagnostic.IDE0079.severity = none

##################################################################################
# StyleCop Analyzers

stylecop.documentation.xmlHeader = false
stylecop.naming.tupleElementNameCasing = camelCase

# SA0001: Xml comment analysis disabled
dotnet_diagnostic.SA0001.severity = none

# SA1101: Prefix local calls with this
dotnet_diagnostic.SA1101.severity = none

# SA1116: Split parameters should start on line after declaration
dotnet_diagnostic.SA1116.severity = none

# SA1117: Parameters should be on same line or separate lines
dotnet_diagnostic.SA1117.severity = none

# SA1122: Use string.Empty for empty strings
dotnet_diagnostic.SA1122.severity = none

# SA1124: Do not use regions
dotnet_diagnostic.SA1124.severity = none

# SA1118: Parameter should not span multiple lines
dotnet_diagnostic.SA1118.severity = none

# SA1204: Static elements should appear before instance elements
dotnet_diagnostic.SA1204.severity = none

# SA1311: Static readonly fields should begin with upper-case letter
dotnet_diagnostic.SA1311.severity = none

# SA1316: Tuple element names should use correct casing
dotnet_diagnostic.SA1316.severity = none

# SA1413: Use trailing comma in multi-line initializers
dotnet_diagnostic.SA1413.severity = none

# SA1503: Braces should not be omitted
dotnet_diagnostic.SA1503.severity = none

# SA1512: Single-line comments should not be followed by blank line
dotnet_diagnostic.SA1512.severity = none

# SA1516: Elements should be separated by blank line
dotnet_diagnostic.SA1516.severity = none

# SA1600: Elements should be documented
dotnet_diagnostic.SA1600.severity = none

# SA1615: Element return value should be documented
dotnet_diagnostic.SA1615.severity = none

# SA1611: Element parameters should be documented
dotnet_diagnostic.SA1611.severity = none

# SA1612: Element parameter documentation should match element parameters
dotnet_diagnostic.SA1612.severity = none

# SA1633: File should have header
dotnet_diagnostic.SA1633.severity = none

##################################################################################
# Net Analyzers

# CA1002: Do not expose generic list
dotnet_diagnostic.CA1002.severity = none

# CA1014: Mark assemblies with CLSCompliant
dotnet_diagnostic.CA1014.severity = none

# CA1034: Nested types should not be visible
dotnet_diagnostic.CA1034.severity = none

# CA1056: URI-like properties should not be strings
dotnet_diagnostic.CA1056.severity = none

# CA1062: Validate arguments of public methods
# Our callers are roslyn and ourselves.
dotnet_diagnostic.CA1062.severity = none

# CA1307: Specify StringComparison for clarity
dotnet_diagnostic.CA1307.severity = none

# CA1310: Specify StringComparison for correctness
dotnet_diagnostic.CA1310.severity = error

##################################################################################
# Roslyn Analyzers

# Default severity for analyzer diagnostics with category 'MicrosoftCodeAnalysisReleaseTracking'
dotnet_analyzer_diagnostic.category-MicrosoftCodeAnalysisReleaseTracking.severity = none

##################################################################################
# CSharpIsNull Analyzers

# CSIsNull001: Use `is null` for null checks
dotnet_diagnostic.CSIsNull001.severity = warning

# CSIsNull002: Use `is object` for non-null checks
dotnet_diagnostic.CSIsNull002.severity = warning
